#-*- mode: python -*-

import os, re, glob, driverUtils

fortCmd = "gfortran"   # <-- Fortran compiler
cppCmd  = "g++"     # <-- C++ compiler

# Location of the /include directory in the ABAQUS installation
abaHomeInc = os.path.abspath(os.path.join(os.environ.get('ABA_HOME', ''), os.pardir)) 

# Avoid signal trapping by the Fortran RTE
os.environ["FOR_IGNORE_EXCEPTIONS"] = "1"
# Disable messages from the Fotran RTE
os.environ["FOR_DISABLE_STACK_TRACE"] = "1"

# Do not let QLogic InfiniPath driver set processor affinity.
os.environ["IPATH_NO_CPUAFFINITY"] = "1"

compile_fortran = [fortCmd,
                   '-free', # use free-format FORTRAN 90 syntax
                   '-c', '-fPIC',
                   '-DABQ_LNX86_64', '-DABQ_FORTRAN',
                   '-fprotect-parens', # honor parenthesis during expression evaluation
                   '-fstack-protector-strong', # enable stack overflow protection checks
                   '-msse3', # generate SSE3, SSE2, and SSE instructions
                   '-I%I', '-I'+abaHomeInc, '%P']

compile_cpp = [cppCmd,
               '-c', '-fPIC', '-w', '-Wno-deprecated', '-DTYPENAME=typename',
               '-D_LINUX_SOURCE', '-DABQ_LINUX', '-DABQ_LNX86_64', '-DSMA_GNUC',
               '-DFOR_TRAIL', '-DHAS_BOOL', '-DASSERT_ENABLED',
               '-D_BSD_TYPES', '-D_BSD_SOURCE', '-D_GNU_SOURCE',
               '-D_POSIX_SOURCE', '-D_XOPEN_SOURCE_EXTENDED', '-D_XOPEN_SOURCE',
               '-DHAVE_OPENGL', '-DHKS_OPEN_GL',  '-DGL_GLEXT_PROTOTYPES',
               '-DMULTI_THREADING_ENABLED', '-D_REENTRANT',
               '-DABQ_MPI_SUPPORT', '-DBIT64', '-D_LARGEFILE64_SOURCE', '-D_FILE_OFFSET_BITS=64', '%P',                
               '-I%I', '-I'+abaHomeInc]

compile_fmu = [cppCmd,
               '-c', '-fPIC','-I%I', '-I'+abaHomeInc]

link_fmu = [cppCmd,
            '-fPIC', '-shared', '-o', '%J', '%M']

link_sl = [fortCmd,
           '-fPIC', '-shared','-Wl,--add-needed', 
           '%E', '-Wl,-soname,%U', '-o', '%U', '%F',
           '%A', '%L', '%B',
           '-Wl,-Bdynamic', '-lgfortran']

link_exe = [cppCmd,
            '-fPIC', '-lgfortran'
            '-Wl,-Bdynamic', '-Wl,--add-needed', '-o', '%J', '%F', '%M', '%L', '%B', '%O']

# Remove the temporary names from the namespace
del cppCmd
del fortCmd
del abaHomeInc

# Avoid CAE display issues due to compositing window animations
if not os.environ.has_key('XLIB_SKIP_ARGB_VISUALS'):
    os.environ['XLIB_SKIP_ARGB_VISUALS'] = '1'
